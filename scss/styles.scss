@use 'variables' as v;

/*
    This file contains general site-wide formatting
    Contents:
        > self-hosted fonts
        > tag formatting
            >> <body>
        > generic page layout, including lined paper
        > header, including logo and nav bar
*/

// Fonts
@font-face {
    font-family: "Handwriting";
    src: url("../fonts/ArchitectsDaughter-Regular.ttf");
} 

// Tags
body{
    display: flex;
    justify-content: center;

    background: v.$c_background;
    color: v.$c_main_text;
    font-family: "Handwriting";
}

// Generic page layout
.whole-page-container{
    width: 100%;
    max-width: v.$breakpoint_page_size_maxwidth;
    margin-top: 5px;
}

/* Explanation: why are .notepad-margin and .hole-punched two separate elements?
    Originally the "hole" divs were children of the margin div, but this caused an issue with the multiply blending.
    The pink vertical line of the margin should be multiplied, so it shows through anything "drawn on top" of it.
    The "holes" should not be multiplied with the paper lines or page contents, because then they don't look like holes.
    If the holes are children of the margin div they end up in the same stacking context and so either both are
    blended or neither is blended.
    Solution: two separate elements, with the holes "on top" of everything (so they can appear suitably hole-y) but
    with certain settings shared with the margin so they look like they're inside it.
*/
.notepad-margin,
.hole-punched{
    width: 10%;
    height: 100%;
}
.notepad-margin{
    border-right: 2px solid pink;
    mix-blend-mode: multiply;
}
.hole-punched{
    position: relative;

    div{
        position: absolute;
        left: 45%;
        z-index: 2;

        min-width: 16px;
        width: 33%;
        height: auto;
        aspect-ratio: 1/1;

        border-radius: 50%;
        background: v.$c_background; 
    }
    /* 
        The hole-punched div is inside notepad-body, but the positions of the holes should also take into account
        the height of the notepad-head (5rem, at the moment).
        Positioning from bottom only needs to consider the taller page, so it's a simple +33% of head height.
        Top needs to consider the taller page and the offset caused by the presence of the header. That's +33%
        for the taller page, -100% for the offset, for a net -66%.
    */
    .top-hole{         
        top: calc(33% - (5rem / 3 * 2));
    }
    .bottom-hole{
        bottom: calc(33% + (5rem / 3));
    }
}

.notepad-head,
.notepad-body{
    width: 100%;
    box-sizing: border-box;
}

// Header
.notepad-head{
    position: relative;
    width: 100%;
    height: v.$height_of_mainheader;

    border-top-left-radius: v.$paper_corner_radius;
    border-top-right-radius: v.$paper_corner_radius;

    background: linear-gradient(
        white, white calc(100% - 3px),
        #9198e5 calc(100% - 1px), #9198e5 100%);

    .notepad-margin{
        position: absolute;
        top: 0;
        left: 0;
    }
}

.main-logo{
    min-width: 60px;
    width: 20%;
    max-width: 110px;
}

.notepad-head-contents{
    position: absolute;
    bottom: 3px;
    right: 0;

    display: flex;
    flex-wrap: wrap;
    justify-content: center;

    box-sizing: border-box;
    width: 100%;

    nav{
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        align-items: center;
        gap: 0.15rem;
    
        min-width: 310px;
        width: 100%;
        max-width: 620px;
    
        font-size: 0.8rem;
    
        .nav-text-box{
            display: flex;
            align-items: center;
            height: 25px;
            padding: 0 0.4rem 3px;
        }
    
        .nav-icon-container{
            display: flex;
            flex-wrap: nowrap;
            align-items: end;
    
            img{
                height: auto;
                width: 22px;
                padding: 5px 3px;
            }
        }
    
        // Different formatting for the nav bar link to the active page
        div.nav-text-box{
            display: block;
            background: url('../images/blob.svg');
            background-size: contain;
            background-repeat: no-repeat;
        }
    }
}
@media screen and (min-width: v.$breakpoint_mainnav_avoid_margin){
    .notepad-header .notepad-margin{
        position: initial;
        float: left;
    }
    .notepad-head-contents{
        width: calc(90% - 2px); // accommodate notepad_margin (10% width + 2px border)

        nav{
            justify-content: space-around;
            width: auto;
            flex-grow: 2;
        }
    }
}
@media screen and (min-width: v.$breakpoint_mainnav_size_change){
    .notepad-head-contents{
        justify-content: space-between;
        gap: 3%;
    
        nav{
            font-size: 1rem;

            .nav-icon-container img{
                width: 32px;
            }
            .nav-text-box{
                height: 32px;
                padding: 0 0.5rem 3px;
            }
        }
    }
}
@media screen and (min-width: v.$breakpoint_page_size_maxwidth){
    .notepad-head-contents{
        justify-content: space-around;

        nav{
            font-size: 1.2rem;
        }
    }
}

.notepad-body{
    display: flex;

    background: white;
    border-bottom-left-radius: v.$paper_corner_radius;
    border-bottom-right-radius: v.$paper_corner_radius;

    // This is used to make the lines "show through" the page contents
    position: relative;
    &::after{
        position: absolute;
        top: 0;
        right: 0;

        display: block;
        content: '';
    
        width: 100%;
        height: 100%;

        border-bottom-left-radius: v.$paper_corner_radius;
        border-bottom-right-radius: v.$paper_corner_radius;

        mix-blend-mode: multiply;
        background: repeating-linear-gradient(
            white, white calc(3vh - 1px),
            #9198e5 3vh, #9198e5 calc(3vh + 1px)
        );

        pointer-events: none;
    }

    .notepad-margin,
    .hole-punched{
        position: absolute;
        top: 0;
        left: 0;
    }

    .notepad-body-contents{
//        float: left;
        box-sizing: border-box;
        width: 100%;
        height: 100%;

        padding: 2rem 3px 1rem;

        display: flex;
        flex-direction: column;
    }
}


// Sketch formatting
.white-outer-stroke{
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff;
}

.sketch-box{
    position: relative;
    border: 2px solid v.$c_accent_A;
    border-radius: 5px 40px 30px 10px / 50px 4px 8px 50px;

    &::before, 
    &::after
    {
        display: block;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        border: 2px solid v.$c_accent_A;
    }

    &::before{
        top: 1px;
        left: 0;
        transform: rotate(-0.8deg); 
        border-radius: 8px 37px 32px 18px / 55px 7px 5px 42px;    
    } 

    &::after{
        top: 0;
        left: 2px;
        transform: rotate(0.9deg);   
        border-radius: 6px 41px 28px 12px / 51px 5px 16px 52px;  
    } 
}

.sketch-hover{
    color: v.$c_main_text;
    text-decoration: none;
    border-bottom: 2px solid transparent;

    &:hover, &:focus, &:active{
        outline: none;
        color: v.$c_accent_B;

        position: relative;
        border-bottom: 2px solid v.$c_accent_A;
        border-bottom-left-radius: 5px/50px;
        border-bottom-right-radius: 35px/8px;
    
        &::before,
        &::after{
            display: block;
            content: '';
            position: absolute;
            width: 100%;
            height: 100%;
            border-bottom: 2px solid v.$c_accent_A;
        }

        &::before{
            top: 2px;
            left: 2px;
            transform: rotate(-2deg);
            border-bottom-left-radius: 7px/42px;
            border-bottom-right-radius: 37px/5px;   
        } 

        &::after{
            top: 0;
            left: 2px;
            transform: rotate(2deg);
            border-bottom-left-radius: 5px/50px;
            border-bottom-right-radius: 35px/8px;   
        } 
    }
}

.sketch-underline{
    color: v.$c_main_text;
    border-bottom: 2px solid transparent;

    position: relative;
    border-bottom: 3px solid v.$c_accent_B;
    border-bottom-left-radius: 5px/50px;
    border-bottom-right-radius: 35px/8px;

    &::before,
    &::after{
        display: block;
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        border-bottom: 3px solid v.$c_accent_B;
    }

    &::after{
        top: 3px;
        left: 3px;
        transform: rotate(-2deg);
        border-bottom-left-radius: 7px/42px;
        border-bottom-right-radius: 37px/5px;   
    } 

    &::before{
        top: 0;
        left: 2px;
        transform: rotate(2deg);
        border-bottom-left-radius: 5px/50px;
        border-bottom-right-radius: 35px/8px;   
    } 
    
}

// Programming language icons
.lang-icon{
    min-width: 32px;
    max-width: 2.5rem;
    aspect-ratio: 1/1;

    font-size: 0.8rem;

    background-color: v.$c_tone_08;
    border: 1px solid v.$c_tone_06;
    border-radius: 0.2rem;

    position: relative;
    span{
        position: absolute;
        top: -999px;
        left: -999px;
    }
}
.javascript-icon{
    background-image: url('../images/tech_js.svg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.html-icon{
    background-image: url('../images/tech_html.svg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.css-icon{
    background-image: url('../images/tech_scss.svg');
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
}
.python-icon{
    background-image: url('../images/tech_python.svg');
    background-size: 80%;
    background-position: 50% 4px;
    background-repeat: no-repeat;
}
.django-icon{
    background-image: url('../images/tech_django.svg');
    background-size: 65%;
    background-position: 35% 4px;
    background-repeat: no-repeat;
}

